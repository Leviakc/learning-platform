---
import { render } from "astro:content";
import { getEntry } from "astro:content";
import LessonLayout from "@/layouts/LessonLayout.astro";
import { Icon } from "astro-icon/components";
import Button from "@/components/ui/button/Button.astro";
import type { Lesson } from "@/types/lesson";
import { orderedPythonLessons } from "@/utils/getOrderPythonLessons";

export async function getStaticPaths() {
  const topics = [
    ...new Set(orderedPythonLessons.map((lesson) => lesson.id.split("/")[0])),
  ];

  return topics.map((topic, index) => {
    const prevTopic = index > 0 ? topics[index - 1] : null;
    const nextTopic = index < topics.length - 1 ? topics[index + 1] : null;
    console.log(
      `Topic: ${topic}, previous topic: ${prevTopic}, next topic: ${nextTopic}`,
    );
    return {
      params: { topic: topic },
      props: {
        topic,
        nextTopic,
      },
    };
  });
}

const { topic, nextTopic } = Astro.props;
console.log(nextTopic);

const exercise = await getEntry("python", `${topic}/exercise`);
const lesson = await getEntry("python", `${topic}/lesson`);

const { Content: ExerciseContent } = exercise
  ? await render(exercise)
  : { Content: null };

const data = lesson?.data as Lesson;
---

<LessonLayout title={data.title} description={data.description}>
  {
    exercise && (
      <div>
        <h1>Practice: {topic}</h1>

        {ExerciseContent && <ExerciseContent />}
      </div>
    )
  }
  <Fragment slot="footer">
    <div class="mt-8 flex justify-between" id="lesson-navigation">
      <Button variant="outline" href={`/python/lessons/${topic}`}>
        <Icon name="arrow-left" />
        Back to Lesson
      </Button>

      {
        nextTopic ? (
          <Button href={`/python/lessons/${nextTopic}`}>
            Next Lesson
            <Icon name="arrow-right" />
          </Button>
        ) : null
      }
    </div>
  </Fragment>
</LessonLayout>

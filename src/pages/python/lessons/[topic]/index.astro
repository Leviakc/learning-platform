---
import { render } from "astro:content";
import { getEntry } from "astro:content";
import LessonLayout from "@/layouts/LessonLayout.astro";
import { Icon } from "astro-icon/components";
import Button from "@/components/ui/button/Button.astro";
import { Quiz } from "@/components/solid/Quiz";
import type { Lesson } from "@/types/lesson";
import { orderedPythonLessons } from "@/utils/getOrderPythonLessons.ts";

export async function getStaticPaths() {
  const topics = [
    ...new Set(orderedPythonLessons.map((lesson) => lesson.id.split("/")[0])),
  ];

  return topics.map((topic, index) => {
    const prevTopic = index > 0 ? topics[index - 1] : null;

    return {
      params: { topic: topic },
      props: {
        topic: topic,
        prevTopic: prevTopic,
      },
    };
  });
}

const { topic, prevTopic } = Astro.props;
const lesson = await getEntry("python", `${topic}/lesson`);

const { Content } = lesson?.data.type === "lesson" ? await render(lesson) : {};
const data = lesson?.data as Lesson;
---

<LessonLayout title={data.title} description={data.description}>
  {Content && <Content />}
  {
    Array.isArray(data?.quiz) && data.quiz.length > 0 && (
      <Fragment slot="quiz">
        <Quiz client:only="solid-js" quiz={data.quiz} />
      </Fragment>
    )
  }
  <Fragment slot="footer">
    <div class="mt-8 flex justify-between" id="lesson-navigation">
      {
        prevTopic ? (
          <Button variant="outline" href={`/python/lessons/${prevTopic}`}>
            <Icon name="arrow-left" />
            Previous Lesson
          </Button>
        ) : (
          <div />
        )
      }

      <!-- TODO: Check if it's possible to do this withouth full reload -->
      <Button
        href={`/python/lessons/${topic}/exercise`}
        data-astro-reload
        data-astro-prefetch
      >
        Go to Exercise
        <Icon name="arrow-right" />
      </Button>
    </div>
  </Fragment>
</LessonLayout>
